<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDenied" xml:space="preserve">
    <value>Access denied.</value>
  </data>
  <data name="AccessDenied_SetEffect" xml:space="preserve">
    <value>No permision to access device.</value>
  </data>
  <data name="AlreadyInitialized" xml:space="preserve">
    <value>An attempt was made to perform an initialization operation when initialization has already been completed.</value>
  </data>
  <data name="AlreadyInitialized_Init" xml:space="preserve">
    <value>Chroma SDK has already been initialized.</value>
  </data>
  <data name="AlreadyInitialized_RegisterEventNotification" xml:space="preserve">
    <value>Invalid Windows handle.</value>
  </data>
  <data name="DeviceNotAvailable" xml:space="preserve">
    <value>Device not available or supported.</value>
  </data>
  <data name="DeviceNotAvailable_CreateEffect" xml:space="preserve">
    <value>Device not supported.</value>
  </data>
  <data name="DeviceNotAvailable_QueryDevice" xml:space="preserve">
    <value>Device not supported.</value>
  </data>
  <data name="DeviceNotConnected" xml:space="preserve">
    <value>Device not connected.</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>General failure.</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalid.</value>
  </data>
  <data name="InvalidHandle" xml:space="preserve">
    <value>Invalid handle.</value>
  </data>
  <data name="InvalidParameter" xml:space="preserve">
    <value>Invalid parameter.</value>
  </data>
  <data name="InvalidParameter_CreateEffect" xml:space="preserve">
    <value>Invalid parameter.</value>
  </data>
  <data name="InvalidParameter_RegisterEventNotification" xml:space="preserve">
    <value>Invalid parameter.</value>
  </data>
  <data name="NoMoreItems" xml:space="preserve">
    <value>No more items.</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Element not found.</value>
  </data>
  <data name="NotFound_DeleteEffect" xml:space="preserve">
    <value>Effect ID not found.</value>
  </data>
  <data name="NotFound_SetEffect" xml:space="preserve">
    <value>Effect ID not found.</value>
  </data>
  <data name="NotSupported" xml:space="preserve">
    <value>Not supported.</value>
  </data>
  <data name="NotSupported_CreateEffect" xml:space="preserve">
    <value>Effect not supported for this device.</value>
  </data>
  <data name="NotValidState" xml:space="preserve">
    <value>The group or resource is not in the correct state to perform the requested operation.</value>
  </data>
  <data name="NotValidState_CreateEffect" xml:space="preserve">
    <value>Chroma SDK not in a valid state. Did you forget to call Init()?</value>
  </data>
  <data name="NotValidState_DeleteEffect" xml:space="preserve">
    <value>Chroma SDK not in a valid state. Did you forget to call Init()?</value>
  </data>
  <data name="NotValidState_RegisterEventNotification" xml:space="preserve">
    <value>Chroma SDK not in a valid state. Did you forget to call Init()?</value>
  </data>
  <data name="NotValidState_SetEffect" xml:space="preserve">
    <value>Chroma SDK not in a valid state. Did you forget to call Init()?</value>
  </data>
  <data name="NotValidState_UnInit" xml:space="preserve">
    <value>Chroma SDK not in a valid state. For every Init() call there should be a corresponding UnInit().</value>
  </data>
  <data name="NotValidState_UnregisterEventNotification" xml:space="preserve">
    <value>Internal state is not valid. There was no event registered.</value>
  </data>
  <data name="RequestAborted" xml:space="preserve">
    <value>Request aborted.</value>
  </data>
  <data name="ResourceDisabled" xml:space="preserve">
    <value>Resource not available or disabled.</value>
  </data>
  <data name="ServiceNotActive" xml:space="preserve">
    <value>The service has not been started.</value>
  </data>
  <data name="ServiceNotActive_Init" xml:space="preserve">
    <value>Chroma SDK Service not running.</value>
  </data>
  <data name="SingleInstanceApp" xml:space="preserve">
    <value>Cannot start more than one instance of the specified program.</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success.</value>
  </data>
</root>